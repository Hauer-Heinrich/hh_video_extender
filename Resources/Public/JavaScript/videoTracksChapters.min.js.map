{
  "version": 3,
  "sources": ["videoTracksChapters.js"],
  "sourcesContent": ["// NodeList forEach Implementation\r\nif (window.NodeList && !NodeList.prototype.forEach) {\r\n    NodeList.prototype.forEach = Array.prototype.forEach;\r\n}\r\n\r\nwindow.addEventListener(\"load\", () => {\r\n    const pageLang = document.documentElement.lang.toLowerCase() || 'en';\r\n    const fallbackLang = 'en';\r\n    const videos = document.querySelectorAll(\"video\");\r\n\r\n    videos.forEach(video => {\r\n        const tracks = Array.from(video.textTracks);\r\n\r\n        // Suche passenden Kapitel-Track basierend auf Sprache\r\n        let selectedTrack = tracks.find(t => t.kind === 'chapters' && t.language === pageLang);\r\n\r\n        // Fallback auf Englisch, falls keine passende Sprache gefunden\r\n        if (!selectedTrack) {\r\n            selectedTrack = tracks.find(t => t.kind === 'chapters' && t.language === fallbackLang);\r\n        }\r\n\r\n        // Keine passenden Kapitel vorhanden\r\n        if (!selectedTrack) return;\r\n\r\n        selectedTrack.mode = \"hidden\";\r\n\r\n        console.log(selectedTrack);\r\n\r\n        // Kapitel-Container erstellen\r\n        const chapterContainer = document.createElement(\"div\");\r\n        chapterContainer.classList.add(\"video-chapters\");\r\n        video.insertAdjacentElement(\"afterend\", chapterContainer);\r\n\r\n        const chapterButtons = [];\r\n\r\n        function renderChapters(cues) {\r\n            chapterContainer.innerHTML = '';\r\n            chapterButtons.length = 0;\r\n\r\n            for (const cue of cues) {\r\n                const button = document.createElement('button');\r\n                button.className = 'chapter-button';\r\n                button.textContent = cue.text;\r\n                button.addEventListener('click', () => {\r\n                    video.currentTime = cue.startTime;\r\n                    video.play();\r\n                });\r\n                chapterButtons.push({ cue, button });\r\n                chapterContainer.appendChild(button);\r\n            }\r\n\r\n            video.addEventListener(\"timeupdate\", () => {\r\n                const currentTime = video.currentTime;\r\n                for (const { cue, button } of chapterButtons) {\r\n                    if (currentTime >= cue.startTime && currentTime < cue.endTime) {\r\n                        button.classList.add('active');\r\n                    } else {\r\n                        button.classList.remove('active');\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        // Polling bis cues geladen sind\r\n        const waitForCues = setInterval(() => {\r\n            if (selectedTrack.cues && selectedTrack.cues.length > 0) {\r\n                clearInterval(waitForCues);\r\n                renderChapters(selectedTrack.cues);\r\n            }\r\n        }, 100);\r\n    });\r\n});\r\n"],
  "mappings": "MACI,OAAO,UAAY,CAAC,SAAS,UAAU,UACvC,SAAS,UAAU,QAAU,MAAM,UAAU,SAGjD,OAAO,iBAAiB,OAAQ,IAAM,CAClC,IAAMA,EAAW,SAAS,gBAAgB,KAAK,YAAY,GAAK,KAC1DC,EAAe,KACN,SAAS,iBAAiB,OAAO,EAEzC,QAAQC,GAAS,CACpB,IAAMC,EAAS,MAAM,KAAKD,EAAM,UAAU,EAGtCE,EAAgBD,EAAO,KAAKE,GAAKA,EAAE,OAAS,YAAcA,EAAE,WAAaL,CAAQ,EAQrF,GALKI,IACDA,EAAgBD,EAAO,KAAKE,GAAKA,EAAE,OAAS,YAAcA,EAAE,WAAaJ,CAAY,GAIrF,CAACG,EAAe,OAEpBA,EAAc,KAAO,SAErB,QAAQ,IAAIA,CAAa,EAGzB,IAAME,EAAmB,SAAS,cAAc,KAAK,EACrDA,EAAiB,UAAU,IAAI,gBAAgB,EAC/CJ,EAAM,sBAAsB,WAAYI,CAAgB,EAExD,IAAMC,EAAiB,CAAC,EAExB,SAASC,EAAeC,EAAM,CAC1BH,EAAiB,UAAY,GAC7BC,EAAe,OAAS,EAExB,QAAWG,KAAOD,EAAM,CACpB,IAAME,EAAS,SAAS,cAAc,QAAQ,EAC9CA,EAAO,UAAY,iBACnBA,EAAO,YAAcD,EAAI,KACzBC,EAAO,iBAAiB,QAAS,IAAM,CACnCT,EAAM,YAAcQ,EAAI,UACxBR,EAAM,KAAK,CACf,CAAC,EACDK,EAAe,KAAK,CAAE,IAAAG,EAAK,OAAAC,CAAO,CAAC,EACnCL,EAAiB,YAAYK,CAAM,CACvC,CAEAT,EAAM,iBAAiB,aAAc,IAAM,CACvC,IAAMU,EAAcV,EAAM,YAC1B,OAAW,CAAE,IAAAQ,EAAK,OAAAC,CAAO,IAAKJ,EACtBK,GAAeF,EAAI,WAAaE,EAAcF,EAAI,QAClDC,EAAO,UAAU,IAAI,QAAQ,EAE7BA,EAAO,UAAU,OAAO,QAAQ,CAG5C,CAAC,CACL,CAGA,IAAME,EAAc,YAAY,IAAM,CAC9BT,EAAc,MAAQA,EAAc,KAAK,OAAS,IAClD,cAAcS,CAAW,EACzBL,EAAeJ,EAAc,IAAI,EAEzC,EAAG,GAAG,CACV,CAAC,CACL,CAAC",
  "names": ["pageLang", "fallbackLang", "video", "tracks", "selectedTrack", "t", "chapterContainer", "chapterButtons", "renderChapters", "cues", "cue", "button", "currentTime", "waitForCues"]
}
